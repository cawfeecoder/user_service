// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_service.proto

/*
Package user_service is a generated protocol buffer package.

It is generated from these files:
	user_service.proto

It has these top-level messages:
	CreateAccountRequest
	CreateAccountResponse
	UpdateInfoRequest
	UpdateInfoResponse
	DeleteAccountRequest
	DeleteAccountResponse
	LoginRequest
	LoginResponse
	RefreshSessionRequest
	RefreshSessionResponse
	TwoFactorAuthRequest
	LogoutRequest
	LogoutResponse
	ChangePasswordRequest
	ChangePasswordResponse
	ResetPasswordRequest
	ResetPasswordResponse
	LockAccountRequest
	LockAccountResponse
	UnlockAccountRequest
	UnlockAccountResponse
	AddRoleRequest
	AddRoleResponse
	DeleteRoleRequest
	DeleteRoleResponse
*/
package user_service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateAccountRequest struct {
	FirstName     string `protobuf:"bytes,1,opt,name=firstName" json:"firstName,omitempty"`
	MiddleInitial string `protobuf:"bytes,2,opt,name=middleInitial" json:"middleInitial,omitempty"`
	LastName      string `protobuf:"bytes,3,opt,name=lastName" json:"lastName,omitempty"`
	Username      string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Password      string `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	Email         string `protobuf:"bytes,6,opt,name=email" json:"email,omitempty"`
	PhoneNumber   string `protobuf:"bytes,7,opt,name=phoneNumber" json:"phoneNumber,omitempty"`
}

func (m *CreateAccountRequest) Reset()                    { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()               {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateAccountRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *CreateAccountRequest) GetMiddleInitial() string {
	if m != nil {
		return m.MiddleInitial
	}
	return ""
}

func (m *CreateAccountRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *CreateAccountRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *CreateAccountRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreateAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateAccountRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

type CreateAccountResponse struct {
	StatusType    int32  `protobuf:"varint,1,opt,name=statusType" json:"statusType,omitempty"`
	StatusMessage string `protobuf:"bytes,2,opt,name=statusMessage" json:"statusMessage,omitempty"`
}

func (m *CreateAccountResponse) Reset()                    { *m = CreateAccountResponse{} }
func (m *CreateAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountResponse) ProtoMessage()               {}
func (*CreateAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateAccountResponse) GetStatusType() int32 {
	if m != nil {
		return m.StatusType
	}
	return 0
}

func (m *CreateAccountResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

type UpdateInfoRequest struct {
	FirstName     string `protobuf:"bytes,1,opt,name=firstName" json:"firstName,omitempty"`
	MiddleInitial string `protobuf:"bytes,2,opt,name=middleInitial" json:"middleInitial,omitempty"`
	LastName      string `protobuf:"bytes,3,opt,name=lastName" json:"lastName,omitempty"`
	Username      string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Email         string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	PhoneNumber   string `protobuf:"bytes,6,opt,name=phoneNumber" json:"phoneNumber,omitempty"`
}

func (m *UpdateInfoRequest) Reset()                    { *m = UpdateInfoRequest{} }
func (m *UpdateInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateInfoRequest) ProtoMessage()               {}
func (*UpdateInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UpdateInfoRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *UpdateInfoRequest) GetMiddleInitial() string {
	if m != nil {
		return m.MiddleInitial
	}
	return ""
}

func (m *UpdateInfoRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *UpdateInfoRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UpdateInfoRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateInfoRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

type UpdateInfoResponse struct {
	StatusType    int32  `protobuf:"varint,1,opt,name=statusType" json:"statusType,omitempty"`
	StatusMessage string `protobuf:"bytes,2,opt,name=statusMessage" json:"statusMessage,omitempty"`
}

func (m *UpdateInfoResponse) Reset()                    { *m = UpdateInfoResponse{} }
func (m *UpdateInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateInfoResponse) ProtoMessage()               {}
func (*UpdateInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UpdateInfoResponse) GetStatusType() int32 {
	if m != nil {
		return m.StatusType
	}
	return 0
}

func (m *UpdateInfoResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

type DeleteAccountRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
}

func (m *DeleteAccountRequest) Reset()                    { *m = DeleteAccountRequest{} }
func (m *DeleteAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAccountRequest) ProtoMessage()               {}
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DeleteAccountRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *DeleteAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type DeleteAccountResponse struct {
	StatusType    int32  `protobuf:"varint,1,opt,name=statusType" json:"statusType,omitempty"`
	StatusMessage string `protobuf:"bytes,2,opt,name=statusMessage" json:"statusMessage,omitempty"`
}

func (m *DeleteAccountResponse) Reset()                    { *m = DeleteAccountResponse{} }
func (m *DeleteAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteAccountResponse) ProtoMessage()               {}
func (*DeleteAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DeleteAccountResponse) GetStatusType() int32 {
	if m != nil {
		return m.StatusType
	}
	return 0
}

func (m *DeleteAccountResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

type LoginRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResponse struct {
	StatusType      int32  `protobuf:"varint,1,opt,name=statusType" json:"statusType,omitempty"`
	StatusMessage   string `protobuf:"bytes,2,opt,name=statusMessage" json:"statusMessage,omitempty"`
	OriginToken     string `protobuf:"bytes,3,opt,name=originToken" json:"originToken,omitempty"`
	DerivativeToken string `protobuf:"bytes,4,opt,name=derivativeToken" json:"derivativeToken,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *LoginResponse) GetStatusType() int32 {
	if m != nil {
		return m.StatusType
	}
	return 0
}

func (m *LoginResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *LoginResponse) GetOriginToken() string {
	if m != nil {
		return m.OriginToken
	}
	return ""
}

func (m *LoginResponse) GetDerivativeToken() string {
	if m != nil {
		return m.DerivativeToken
	}
	return ""
}

type RefreshSessionRequest struct {
	OriginToken string `protobuf:"bytes,1,opt,name=originToken" json:"originToken,omitempty"`
}

func (m *RefreshSessionRequest) Reset()                    { *m = RefreshSessionRequest{} }
func (m *RefreshSessionRequest) String() string            { return proto.CompactTextString(m) }
func (*RefreshSessionRequest) ProtoMessage()               {}
func (*RefreshSessionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RefreshSessionRequest) GetOriginToken() string {
	if m != nil {
		return m.OriginToken
	}
	return ""
}

type RefreshSessionResponse struct {
	StatusType      string `protobuf:"bytes,1,opt,name=statusType" json:"statusType,omitempty"`
	StatusMessage   string `protobuf:"bytes,2,opt,name=statusMessage" json:"statusMessage,omitempty"`
	DerivativeToken string `protobuf:"bytes,3,opt,name=derivativeToken" json:"derivativeToken,omitempty"`
}

func (m *RefreshSessionResponse) Reset()                    { *m = RefreshSessionResponse{} }
func (m *RefreshSessionResponse) String() string            { return proto.CompactTextString(m) }
func (*RefreshSessionResponse) ProtoMessage()               {}
func (*RefreshSessionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RefreshSessionResponse) GetStatusType() string {
	if m != nil {
		return m.StatusType
	}
	return ""
}

func (m *RefreshSessionResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *RefreshSessionResponse) GetDerivativeToken() string {
	if m != nil {
		return m.DerivativeToken
	}
	return ""
}

type TwoFactorAuthRequest struct {
	TwoFactorAnswer string `protobuf:"bytes,1,opt,name=TwoFactorAnswer,json=twoFactorAnswer" json:"TwoFactorAnswer,omitempty"`
}

func (m *TwoFactorAuthRequest) Reset()                    { *m = TwoFactorAuthRequest{} }
func (m *TwoFactorAuthRequest) String() string            { return proto.CompactTextString(m) }
func (*TwoFactorAuthRequest) ProtoMessage()               {}
func (*TwoFactorAuthRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *TwoFactorAuthRequest) GetTwoFactorAnswer() string {
	if m != nil {
		return m.TwoFactorAnswer
	}
	return ""
}

type LogoutRequest struct {
	Username        string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Email           string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	OriginToken     string `protobuf:"bytes,3,opt,name=originToken" json:"originToken,omitempty"`
	DerivativeToken string `protobuf:"bytes,4,opt,name=derivativeToken" json:"derivativeToken,omitempty"`
}

func (m *LogoutRequest) Reset()                    { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string            { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()               {}
func (*LogoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *LogoutRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LogoutRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LogoutRequest) GetOriginToken() string {
	if m != nil {
		return m.OriginToken
	}
	return ""
}

func (m *LogoutRequest) GetDerivativeToken() string {
	if m != nil {
		return m.DerivativeToken
	}
	return ""
}

type LogoutResponse struct {
	StatusType    int32  `protobuf:"varint,1,opt,name=statusType" json:"statusType,omitempty"`
	StatusMessage string `protobuf:"bytes,2,opt,name=statusMessage" json:"statusMessage,omitempty"`
}

func (m *LogoutResponse) Reset()                    { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string            { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()               {}
func (*LogoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *LogoutResponse) GetStatusType() int32 {
	if m != nil {
		return m.StatusType
	}
	return 0
}

func (m *LogoutResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

type ChangePasswordRequest struct {
	Username    string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Email       string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	OldPassword string `protobuf:"bytes,3,opt,name=oldPassword" json:"oldPassword,omitempty"`
	NewPassword string `protobuf:"bytes,4,opt,name=newPassword" json:"newPassword,omitempty"`
}

func (m *ChangePasswordRequest) Reset()                    { *m = ChangePasswordRequest{} }
func (m *ChangePasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangePasswordRequest) ProtoMessage()               {}
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ChangePasswordRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ChangePasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ChangePasswordRequest) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *ChangePasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

type ChangePasswordResponse struct {
	StatusType    int32  `protobuf:"varint,1,opt,name=statusType" json:"statusType,omitempty"`
	StatusMessage string `protobuf:"bytes,2,opt,name=statusMessage" json:"statusMessage,omitempty"`
}

func (m *ChangePasswordResponse) Reset()                    { *m = ChangePasswordResponse{} }
func (m *ChangePasswordResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangePasswordResponse) ProtoMessage()               {}
func (*ChangePasswordResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ChangePasswordResponse) GetStatusType() int32 {
	if m != nil {
		return m.StatusType
	}
	return 0
}

func (m *ChangePasswordResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

type ResetPasswordRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
}

func (m *ResetPasswordRequest) Reset()                    { *m = ResetPasswordRequest{} }
func (m *ResetPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*ResetPasswordRequest) ProtoMessage()               {}
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ResetPasswordRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ResetPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type ResetPasswordResponse struct {
	StatusType    int32  `protobuf:"varint,1,opt,name=statusType" json:"statusType,omitempty"`
	StatusMessage string `protobuf:"bytes,2,opt,name=statusMessage" json:"statusMessage,omitempty"`
}

func (m *ResetPasswordResponse) Reset()                    { *m = ResetPasswordResponse{} }
func (m *ResetPasswordResponse) String() string            { return proto.CompactTextString(m) }
func (*ResetPasswordResponse) ProtoMessage()               {}
func (*ResetPasswordResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ResetPasswordResponse) GetStatusType() int32 {
	if m != nil {
		return m.StatusType
	}
	return 0
}

func (m *ResetPasswordResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

type LockAccountRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	LockType int32  `protobuf:"varint,3,opt,name=lockType" json:"lockType,omitempty"`
}

func (m *LockAccountRequest) Reset()                    { *m = LockAccountRequest{} }
func (m *LockAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*LockAccountRequest) ProtoMessage()               {}
func (*LockAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *LockAccountRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LockAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LockAccountRequest) GetLockType() int32 {
	if m != nil {
		return m.LockType
	}
	return 0
}

type LockAccountResponse struct {
	StatusType    int32  `protobuf:"varint,1,opt,name=statusType" json:"statusType,omitempty"`
	StatusMessage string `protobuf:"bytes,2,opt,name=statusMessage" json:"statusMessage,omitempty"`
}

func (m *LockAccountResponse) Reset()                    { *m = LockAccountResponse{} }
func (m *LockAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*LockAccountResponse) ProtoMessage()               {}
func (*LockAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *LockAccountResponse) GetStatusType() int32 {
	if m != nil {
		return m.StatusType
	}
	return 0
}

func (m *LockAccountResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

type UnlockAccountRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
}

func (m *UnlockAccountRequest) Reset()                    { *m = UnlockAccountRequest{} }
func (m *UnlockAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*UnlockAccountRequest) ProtoMessage()               {}
func (*UnlockAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *UnlockAccountRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UnlockAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type UnlockAccountResponse struct {
	StatusType    int32  `protobuf:"varint,1,opt,name=statusType" json:"statusType,omitempty"`
	StatusMessage string `protobuf:"bytes,2,opt,name=statusMessage" json:"statusMessage,omitempty"`
}

func (m *UnlockAccountResponse) Reset()                    { *m = UnlockAccountResponse{} }
func (m *UnlockAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*UnlockAccountResponse) ProtoMessage()               {}
func (*UnlockAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *UnlockAccountResponse) GetStatusType() int32 {
	if m != nil {
		return m.StatusType
	}
	return 0
}

func (m *UnlockAccountResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

type AddRoleRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Role     int32  `protobuf:"varint,3,opt,name=role" json:"role,omitempty"`
}

func (m *AddRoleRequest) Reset()                    { *m = AddRoleRequest{} }
func (m *AddRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*AddRoleRequest) ProtoMessage()               {}
func (*AddRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *AddRoleRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AddRoleRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AddRoleRequest) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

type AddRoleResponse struct {
	StatusType    int32  `protobuf:"varint,1,opt,name=statusType" json:"statusType,omitempty"`
	StatusMessage string `protobuf:"bytes,2,opt,name=statusMessage" json:"statusMessage,omitempty"`
}

func (m *AddRoleResponse) Reset()                    { *m = AddRoleResponse{} }
func (m *AddRoleResponse) String() string            { return proto.CompactTextString(m) }
func (*AddRoleResponse) ProtoMessage()               {}
func (*AddRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *AddRoleResponse) GetStatusType() int32 {
	if m != nil {
		return m.StatusType
	}
	return 0
}

func (m *AddRoleResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

type DeleteRoleRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Role     int32  `protobuf:"varint,3,opt,name=role" json:"role,omitempty"`
}

func (m *DeleteRoleRequest) Reset()                    { *m = DeleteRoleRequest{} }
func (m *DeleteRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRoleRequest) ProtoMessage()               {}
func (*DeleteRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *DeleteRoleRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *DeleteRoleRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *DeleteRoleRequest) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

type DeleteRoleResponse struct {
	StatusType    int32  `protobuf:"varint,1,opt,name=statusType" json:"statusType,omitempty"`
	StatusMessage string `protobuf:"bytes,2,opt,name=statusMessage" json:"statusMessage,omitempty"`
}

func (m *DeleteRoleResponse) Reset()                    { *m = DeleteRoleResponse{} }
func (m *DeleteRoleResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteRoleResponse) ProtoMessage()               {}
func (*DeleteRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *DeleteRoleResponse) GetStatusType() int32 {
	if m != nil {
		return m.StatusType
	}
	return 0
}

func (m *DeleteRoleResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateAccountRequest)(nil), "user_service.CreateAccountRequest")
	proto.RegisterType((*CreateAccountResponse)(nil), "user_service.CreateAccountResponse")
	proto.RegisterType((*UpdateInfoRequest)(nil), "user_service.UpdateInfoRequest")
	proto.RegisterType((*UpdateInfoResponse)(nil), "user_service.UpdateInfoResponse")
	proto.RegisterType((*DeleteAccountRequest)(nil), "user_service.DeleteAccountRequest")
	proto.RegisterType((*DeleteAccountResponse)(nil), "user_service.DeleteAccountResponse")
	proto.RegisterType((*LoginRequest)(nil), "user_service.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "user_service.LoginResponse")
	proto.RegisterType((*RefreshSessionRequest)(nil), "user_service.RefreshSessionRequest")
	proto.RegisterType((*RefreshSessionResponse)(nil), "user_service.RefreshSessionResponse")
	proto.RegisterType((*TwoFactorAuthRequest)(nil), "user_service.TwoFactorAuthRequest")
	proto.RegisterType((*LogoutRequest)(nil), "user_service.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "user_service.LogoutResponse")
	proto.RegisterType((*ChangePasswordRequest)(nil), "user_service.ChangePasswordRequest")
	proto.RegisterType((*ChangePasswordResponse)(nil), "user_service.ChangePasswordResponse")
	proto.RegisterType((*ResetPasswordRequest)(nil), "user_service.ResetPasswordRequest")
	proto.RegisterType((*ResetPasswordResponse)(nil), "user_service.ResetPasswordResponse")
	proto.RegisterType((*LockAccountRequest)(nil), "user_service.LockAccountRequest")
	proto.RegisterType((*LockAccountResponse)(nil), "user_service.LockAccountResponse")
	proto.RegisterType((*UnlockAccountRequest)(nil), "user_service.UnlockAccountRequest")
	proto.RegisterType((*UnlockAccountResponse)(nil), "user_service.UnlockAccountResponse")
	proto.RegisterType((*AddRoleRequest)(nil), "user_service.AddRoleRequest")
	proto.RegisterType((*AddRoleResponse)(nil), "user_service.AddRoleResponse")
	proto.RegisterType((*DeleteRoleRequest)(nil), "user_service.DeleteRoleRequest")
	proto.RegisterType((*DeleteRoleResponse)(nil), "user_service.DeleteRoleResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserService service

type UserServiceClient interface {
	// Account CRUD
	CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error)
	UpdateInfo(ctx context.Context, in *UpdateInfoRequest, opts ...grpc.CallOption) (*UpdateInfoResponse, error)
	DeleteAccount(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*DeleteAccountResponse, error)
	// Account Actions
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	RefreshSession(ctx context.Context, in *RefreshSessionRequest, opts ...grpc.CallOption) (*RefreshSessionResponse, error)
	PerformTwoFactorAuth(ctx context.Context, in *TwoFactorAuthRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error)
	ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*ChangePasswordResponse, error)
	ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*ResetPasswordResponse, error)
	LockAccount(ctx context.Context, in *LockAccountRequest, opts ...grpc.CallOption) (*LockAccountResponse, error)
	UnlockAccount(ctx context.Context, in *UnlockAccountRequest, opts ...grpc.CallOption) (*UnlockAccountResponse, error)
	AddRole(ctx context.Context, in *AddRoleRequest, opts ...grpc.CallOption) (*AddRoleResponse, error)
	DeleteRole(ctx context.Context, in *DeleteRoleRequest, opts ...grpc.CallOption) (*DeleteRoleResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error) {
	out := new(CreateAccountResponse)
	err := grpc.Invoke(ctx, "/user_service.UserService/CreateAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateInfo(ctx context.Context, in *UpdateInfoRequest, opts ...grpc.CallOption) (*UpdateInfoResponse, error) {
	out := new(UpdateInfoResponse)
	err := grpc.Invoke(ctx, "/user_service.UserService/UpdateInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteAccount(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*DeleteAccountResponse, error) {
	out := new(DeleteAccountResponse)
	err := grpc.Invoke(ctx, "/user_service.UserService/DeleteAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/user_service.UserService/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) RefreshSession(ctx context.Context, in *RefreshSessionRequest, opts ...grpc.CallOption) (*RefreshSessionResponse, error) {
	out := new(RefreshSessionResponse)
	err := grpc.Invoke(ctx, "/user_service.UserService/RefreshSession", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) PerformTwoFactorAuth(ctx context.Context, in *TwoFactorAuthRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/user_service.UserService/PerformTwoFactorAuth", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error) {
	out := new(LogoutResponse)
	err := grpc.Invoke(ctx, "/user_service.UserService/Logout", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*ChangePasswordResponse, error) {
	out := new(ChangePasswordResponse)
	err := grpc.Invoke(ctx, "/user_service.UserService/ChangePassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*ResetPasswordResponse, error) {
	out := new(ResetPasswordResponse)
	err := grpc.Invoke(ctx, "/user_service.UserService/ResetPassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) LockAccount(ctx context.Context, in *LockAccountRequest, opts ...grpc.CallOption) (*LockAccountResponse, error) {
	out := new(LockAccountResponse)
	err := grpc.Invoke(ctx, "/user_service.UserService/LockAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UnlockAccount(ctx context.Context, in *UnlockAccountRequest, opts ...grpc.CallOption) (*UnlockAccountResponse, error) {
	out := new(UnlockAccountResponse)
	err := grpc.Invoke(ctx, "/user_service.UserService/UnlockAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AddRole(ctx context.Context, in *AddRoleRequest, opts ...grpc.CallOption) (*AddRoleResponse, error) {
	out := new(AddRoleResponse)
	err := grpc.Invoke(ctx, "/user_service.UserService/AddRole", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteRole(ctx context.Context, in *DeleteRoleRequest, opts ...grpc.CallOption) (*DeleteRoleResponse, error) {
	out := new(DeleteRoleResponse)
	err := grpc.Invoke(ctx, "/user_service.UserService/DeleteRole", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceServer interface {
	// Account CRUD
	CreateAccount(context.Context, *CreateAccountRequest) (*CreateAccountResponse, error)
	UpdateInfo(context.Context, *UpdateInfoRequest) (*UpdateInfoResponse, error)
	DeleteAccount(context.Context, *DeleteAccountRequest) (*DeleteAccountResponse, error)
	// Account Actions
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	RefreshSession(context.Context, *RefreshSessionRequest) (*RefreshSessionResponse, error)
	PerformTwoFactorAuth(context.Context, *TwoFactorAuthRequest) (*LoginResponse, error)
	Logout(context.Context, *LogoutRequest) (*LogoutResponse, error)
	ChangePassword(context.Context, *ChangePasswordRequest) (*ChangePasswordResponse, error)
	ResetPassword(context.Context, *ResetPasswordRequest) (*ResetPasswordResponse, error)
	LockAccount(context.Context, *LockAccountRequest) (*LockAccountResponse, error)
	UnlockAccount(context.Context, *UnlockAccountRequest) (*UnlockAccountResponse, error)
	AddRole(context.Context, *AddRoleRequest) (*AddRoleResponse, error)
	DeleteRole(context.Context, *DeleteRoleRequest) (*DeleteRoleResponse, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateAccount(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/UpdateInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateInfo(ctx, req.(*UpdateInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/DeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteAccount(ctx, req.(*DeleteAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_RefreshSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RefreshSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/RefreshSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RefreshSession(ctx, req.(*RefreshSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_PerformTwoFactorAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TwoFactorAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).PerformTwoFactorAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/PerformTwoFactorAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).PerformTwoFactorAuth(ctx, req.(*TwoFactorAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ChangePassword(ctx, req.(*ChangePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/ResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ResetPassword(ctx, req.(*ResetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_LockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).LockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/LockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).LockAccount(ctx, req.(*LockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UnlockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UnlockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/UnlockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UnlockAccount(ctx, req.(*UnlockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_AddRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AddRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/AddRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AddRole(ctx, req.(*AddRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/DeleteRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteRole(ctx, req.(*DeleteRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user_service.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _UserService_CreateAccount_Handler,
		},
		{
			MethodName: "UpdateInfo",
			Handler:    _UserService_UpdateInfo_Handler,
		},
		{
			MethodName: "DeleteAccount",
			Handler:    _UserService_DeleteAccount_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _UserService_Login_Handler,
		},
		{
			MethodName: "RefreshSession",
			Handler:    _UserService_RefreshSession_Handler,
		},
		{
			MethodName: "PerformTwoFactorAuth",
			Handler:    _UserService_PerformTwoFactorAuth_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _UserService_Logout_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _UserService_ChangePassword_Handler,
		},
		{
			MethodName: "ResetPassword",
			Handler:    _UserService_ResetPassword_Handler,
		},
		{
			MethodName: "LockAccount",
			Handler:    _UserService_LockAccount_Handler,
		},
		{
			MethodName: "UnlockAccount",
			Handler:    _UserService_UnlockAccount_Handler,
		},
		{
			MethodName: "AddRole",
			Handler:    _UserService_AddRole_Handler,
		},
		{
			MethodName: "DeleteRole",
			Handler:    _UserService_DeleteRole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_service.proto",
}

func init() { proto.RegisterFile("user_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 831 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0xc1, 0x52, 0x1a, 0x4d,
	0x10, 0x66, 0x45, 0x50, 0x5b, 0x91, 0xdf, 0xf9, 0xd1, 0xa2, 0xf6, 0xf7, 0x4f, 0xc8, 0xe8, 0xc1,
	0xca, 0xc1, 0x43, 0x72, 0xca, 0x2d, 0x6a, 0x92, 0xd2, 0x2a, 0x63, 0x11, 0x44, 0x53, 0x92, 0x98,
	0xd4, 0xca, 0x36, 0xb0, 0xe5, 0xb2, 0x43, 0x66, 0x16, 0xa9, 0xbc, 0x41, 0x2e, 0x3e, 0x44, 0x9e,
	0x26, 0x6f, 0x92, 0xbc, 0x46, 0x6a, 0x77, 0x61, 0x99, 0x19, 0x16, 0x52, 0x85, 0x7b, 0xc8, 0xcd,
	0xe9, 0x6e, 0x7b, 0xbe, 0xaf, 0xa7, 0xf7, 0xeb, 0x06, 0x48, 0x5f, 0x20, 0xff, 0x2c, 0x90, 0xdf,
	0x39, 0x4d, 0xdc, 0xef, 0x71, 0xe6, 0x33, 0xb2, 0x26, 0xdb, 0xe8, 0x4f, 0x03, 0x4a, 0x47, 0x1c,
	0x2d, 0x1f, 0x0f, 0x9a, 0x4d, 0xd6, 0xf7, 0xfc, 0x1a, 0x7e, 0xe9, 0xa3, 0xf0, 0xc9, 0x36, 0xac,
	0xb4, 0x1c, 0x2e, 0xfc, 0x33, 0xab, 0x8b, 0x65, 0xa3, 0x62, 0xec, 0xad, 0xd4, 0xc6, 0x06, 0xb2,
	0x0b, 0x85, 0xae, 0x63, 0xdb, 0x2e, 0x9e, 0x78, 0x8e, 0xef, 0x58, 0x6e, 0x79, 0x21, 0x8c, 0x50,
	0x8d, 0xc4, 0x84, 0x65, 0xd7, 0x1a, 0xa6, 0xc8, 0x86, 0x01, 0xf1, 0x39, 0xf0, 0x05, 0x40, 0xbc,
	0xc0, 0xb7, 0x18, 0xf9, 0x46, 0xe7, 0xc0, 0xd7, 0xb3, 0x84, 0x18, 0x30, 0x6e, 0x97, 0x73, 0x91,
	0x6f, 0x74, 0x26, 0x25, 0xc8, 0x61, 0xd7, 0x72, 0xdc, 0x72, 0x3e, 0x74, 0x44, 0x07, 0x52, 0x81,
	0xd5, 0x5e, 0x87, 0x79, 0x78, 0xd6, 0xef, 0xde, 0x20, 0x2f, 0x2f, 0x85, 0x3e, 0xd9, 0x44, 0xaf,
	0x61, 0x53, 0xe3, 0x29, 0x7a, 0xcc, 0x13, 0x48, 0x1e, 0x01, 0x08, 0xdf, 0xf2, 0xfb, 0xa2, 0xfe,
	0xb5, 0x17, 0x31, 0xcd, 0xd5, 0x24, 0x4b, 0x40, 0x35, 0x3a, 0xbd, 0x45, 0x21, 0xac, 0x36, 0x8e,
	0xa8, 0x2a, 0x46, 0xfa, 0xc3, 0x80, 0x8d, 0x8b, 0x9e, 0x6d, 0xf9, 0x78, 0xe2, 0xb5, 0xd8, 0xdf,
	0x50, 0xc4, 0xb8, 0x50, 0xb9, 0x19, 0x85, 0xca, 0x4f, 0x16, 0xaa, 0x01, 0x44, 0x26, 0x92, 0x6a,
	0x95, 0x8e, 0xa1, 0xf4, 0x0a, 0x5d, 0x9c, 0x68, 0x36, 0x99, 0x87, 0x31, 0x8d, 0xc7, 0x82, 0xc4,
	0x23, 0x78, 0x4e, 0x2d, 0x53, 0xaa, 0x40, 0x3f, 0xc2, 0xda, 0x29, 0x6b, 0x3b, 0xde, 0xdc, 0x00,
	0x95, 0x1e, 0xce, 0xaa, 0x3d, 0x4c, 0xbf, 0x1b, 0x50, 0x18, 0xa6, 0x4f, 0x13, 0x75, 0xf0, 0xb8,
	0x8c, 0x3b, 0x6d, 0xc7, 0xab, 0xb3, 0x5b, 0xf4, 0x86, 0xd7, 0xca, 0x26, 0xb2, 0x07, 0x45, 0x1b,
	0xb9, 0x73, 0x67, 0xf9, 0xce, 0x1d, 0x46, 0x51, 0x51, 0xdf, 0xe8, 0x66, 0xfa, 0x02, 0x36, 0x6b,
	0xd8, 0xe2, 0x28, 0x3a, 0xe7, 0x28, 0x84, 0xc3, 0xe2, 0x52, 0x68, 0x97, 0x18, 0x13, 0x97, 0xd0,
	0x6f, 0x06, 0x6c, 0xe9, 0xff, 0x3b, 0x95, 0xe7, 0xca, 0x1c, 0x3c, 0x13, 0x58, 0x64, 0x93, 0x59,
	0xbc, 0x84, 0x52, 0x7d, 0xc0, 0xde, 0x58, 0x4d, 0x9f, 0xf1, 0x83, 0xbe, 0xdf, 0x19, 0x91, 0xd8,
	0x83, 0xe2, 0xd8, 0xee, 0x89, 0x01, 0xf2, 0x21, 0x98, 0xa2, 0xaf, 0x9a, 0xe9, 0x7d, 0xf4, 0x56,
	0xac, 0x3f, 0x7f, 0xb3, 0xa6, 0xfa, 0x2e, 0x97, 0xb0, 0x3e, 0x82, 0x93, 0x6a, 0xc7, 0xdf, 0x1b,
	0xb0, 0x79, 0xd4, 0xb1, 0xbc, 0x36, 0x56, 0x87, 0x6d, 0xfa, 0x30, 0xbe, 0xae, 0x5d, 0x55, 0xdb,
	0x5f, 0x36, 0x05, 0x11, 0x1e, 0x0e, 0xe2, 0x88, 0x88, 0xab, 0x6c, 0xa2, 0x9f, 0x60, 0x4b, 0x87,
	0x93, 0xb6, 0x14, 0xd5, 0x50, 0xa0, 0xff, 0x60, 0xb6, 0x81, 0x14, 0x69, 0x99, 0x52, 0x05, 0x7a,
	0x03, 0xe4, 0x94, 0x35, 0x6f, 0x1f, 0xaa, 0x98, 0xe1, 0x1c, 0x61, 0xcd, 0xdb, 0x10, 0x4b, 0x36,
	0xc4, 0x12, 0x9f, 0xe9, 0x07, 0xf8, 0x57, 0xb9, 0x23, 0xed, 0x4a, 0x5f, 0x78, 0x6e, 0x0a, 0x14,
	0x82, 0x4a, 0x6b, 0x99, 0x52, 0x05, 0x7a, 0x09, 0xeb, 0x07, 0xb6, 0x5d, 0x63, 0x2e, 0xce, 0x5f,
	0x65, 0x02, 0x8b, 0x9c, 0xb9, 0xa3, 0x0a, 0x87, 0x7f, 0xd3, 0xf7, 0x50, 0x8c, 0xf3, 0xa6, 0x0a,
	0xf8, 0x0a, 0x36, 0xa2, 0x21, 0x98, 0x3e, 0xe6, 0x06, 0x10, 0x39, 0x75, 0x9a, 0xb0, 0x9f, 0xfd,
	0x5a, 0x86, 0xd5, 0x0b, 0x81, 0xfc, 0x3c, 0xda, 0x41, 0x49, 0x03, 0x0a, 0xca, 0x6a, 0x46, 0xe8,
	0xbe, 0xb2, 0xb7, 0x26, 0xed, 0xa7, 0xe6, 0xce, 0xcc, 0x98, 0x08, 0x2f, 0xcd, 0x90, 0x77, 0x00,
	0xe3, 0x6d, 0x86, 0x3c, 0x56, 0xff, 0x69, 0x62, 0x61, 0x33, 0x2b, 0xd3, 0x03, 0xe2, 0x94, 0x0d,
	0x28, 0x28, 0xab, 0x87, 0x0e, 0x37, 0x69, 0xc3, 0xd1, 0xe1, 0x26, 0xee, 0x2e, 0x34, 0x43, 0x0e,
	0x21, 0x17, 0x2e, 0x06, 0xc4, 0x54, 0xe3, 0xe5, 0x65, 0xc4, 0xfc, 0x2f, 0xd1, 0x17, 0xe7, 0xb8,
	0x86, 0x75, 0x75, 0xfa, 0x12, 0xed, 0xf2, 0xc4, 0xb9, 0x6e, 0xee, 0xce, 0x0e, 0x8a, 0xd3, 0x5f,
	0x41, 0xa9, 0x8a, 0xbc, 0xc5, 0x78, 0x57, 0x99, 0xac, 0x7a, 0x15, 0x92, 0xc6, 0xee, 0x9f, 0x90,
	0xbf, 0x86, 0x7c, 0x34, 0xdb, 0xc8, 0x64, 0xe0, 0x78, 0x00, 0x9b, 0xdb, 0xc9, 0x4e, 0xb9, 0x00,
	0xea, 0xe8, 0xd0, 0x0b, 0x90, 0x38, 0xe7, 0xf4, 0x02, 0x24, 0x4f, 0x9f, 0xe8, 0xfd, 0x15, 0xbd,
	0xd7, 0x99, 0x27, 0x8d, 0x15, 0x73, 0x67, 0x66, 0x4c, 0x9c, 0xbb, 0x0e, 0xab, 0x92, 0x10, 0x93,
	0x8a, 0xce, 0x54, 0x17, 0x51, 0xf3, 0xc9, 0x8c, 0x08, 0x19, 0xb1, 0xa2, 0x9b, 0x3a, 0xe2, 0x24,
	0x79, 0xd6, 0x11, 0x27, 0x0a, 0x2f, 0xcd, 0x90, 0x63, 0x58, 0x1a, 0x8a, 0x1b, 0xd1, 0xde, 0x45,
	0xd5, 0x52, 0xf3, 0xff, 0x29, 0x5e, 0xf9, 0x53, 0x1d, 0x4b, 0x8e, 0xfe, 0xa9, 0x4e, 0xe8, 0x9c,
	0xfe, 0xa9, 0x4e, 0xaa, 0x15, 0xcd, 0x1c, 0x3e, 0x85, 0x92, 0xc3, 0xf6, 0xdb, 0xbc, 0xd7, 0x54,
	0x82, 0x0f, 0xff, 0x91, 0xe4, 0xa7, 0x1a, 0xfc, 0x2a, 0xae, 0x1a, 0x37, 0xf9, 0xf0, 0xe7, 0xf1,
	0xf3, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xf0, 0x8f, 0x15, 0x34, 0x0f, 0x00, 0x00,
}
